<?xml version="1.0"?>
<jboss-deployment-structure xmlns="urn:jboss:deployment-structure:1.2">
  <deployment>
    <dependencies>
      <!--
      This demo uses Apache CXF 3.1.6

      When calling
      curl 'localhost:8080/demo/api/hello'
      Hello World!
      was returned no problem

      HOWEVER when calling curl 'localhost:8080/demo/api/hello?cxf-proxy=true'

      java.lang.NoClassDefFoundError: org.apache.cxf.jaxws.JaxWsProxyFactoryBean

      The class org.apache.cxf.jaxws.JaxWsProxyFactoryBean
      is found in
      .m2/repository/org/apache/cxf/cxf-rt-frontend-jaxws/3.1.6/cxf-rt-frontend-jaxws-3.1.6.jar


      A similar named jar found in
      https://github.com/suvo/jboss-eap/blob/master/modules/system/layers/base/org/apache/cxf/impl/main/module.xml
      <module xmlns="urn:jboss:module:1.1" name="org.apache.cxf.impl">
      <resource-root path="cxf-rt-frontend-jaxws-2.7.14.redhat-1.jar"/>

      is mentioned on the web as being what is needed as a fix

      i.e. add
      <module name="org.apache.cxf" export="true" />
      <module name="org.apache.cxf.impl" export="true" />

      In my case the did not work

      In the end I created
      src/main/resources/META-INF/MANIFEST.MF
        Dependencies: org.apache.cxf
        Dependencies: org.apache.cxf.impl

      This enabled running of the swarm jar and calling the end point that previously errored

      -->

      <module name="org.apache.cxf" export="true" />
      <module name="org.apache.cxf.impl" export="true" />

    </dependencies>
  </deployment>
</jboss-deployment-structure>